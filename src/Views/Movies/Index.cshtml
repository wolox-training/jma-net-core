@model testing_net.Models.Views.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select name="movieGenre" asp-items="Model.Genres" asp-for="CurrentMovieGenre">
            <option value="">All</option>
        </select>

        Title: <input type="text" name="searchString" asp-for="CurrentFilter" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table"> 
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-for="CurrentSort" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@Model.CurrentFilter" asp-route-movieGenre="@Model.CurrentMovieGenre">
                    @Html.DisplayNameFor(model => model.Movies[0].Title)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-for="CurrentSort" asp-route-sortOrder="@ViewData["ReleaseDateSortParm"]" asp-route-currentFilter="@Model.CurrentFilter" asp-route-movieGenre="@Model.CurrentMovieGenre">
                    @Html.DisplayNameFor(model => model.Movies[0].ReleaseDate)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-for="CurrentSort" asp-route-sortOrder="@ViewData["GenreSortParm"]" asp-route-currentFilter="@Model.CurrentFilter" asp-route-movieGenre="@Model.CurrentMovieGenre">
                    @Html.DisplayNameFor(model => model.Movies[0].Genre)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies) 
        {
            <tr>
                <td>
                @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a> |
                <a asp-action="SendMovieToAddress" asp-route-id="@item.ID">Send</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movies.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@Model.CurrentSortOrder"
   asp-route-page="@(Model.Movies.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   asp-route-movieGenre="@Model.CurrentMovieGenre"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@Model.CurrentSortOrder"
   asp-route-page="@(Model.Movies.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   asp-route-movieGenre="@Model.CurrentMovieGenre"
   class="btn btn-default @nextDisabled">
    Next
</a>
